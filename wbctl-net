#!/usr/bin/env python
# Copyright (C) 2008 Nobuhiro Iwamatsu
# 		Nobuhiro Iwamatsu <iwamatsu@nigauri.org>

from optparse import OptionParser, OptionValueError
import os
import sys
import telnetlib

PASSWD='magic\r'
SRV_CON_CHK='server ready.'
PASSWD_PT_CHK='Password:'
OK_CHK='OK'
WBC_PT='WB1>'
TOUT=10

usage = "usage: wtc-net [options]"
parser = OptionParser(usage)

parser.add_option("-s", "--server", type="string", dest="server", 
    help="watchboot server", metavar="SRV")

parser.add_option("-c", "--cmd", type="string", dest="cmd", 
    help="watchboot command ( on or off)", metavar="CMD")

parser.add_option("-p", "--port", type="int", dest="port", default=1,
    help="watchboot port number 1-8", metavar="<n>")

(options, args) = parser.parse_args()

if options.server == None :
	parser.print_help()
	exit()

if options.port < 1 or options.port > 8 :
	parser.print_help()
	exit()
	
if options.cmd == "on":
	set_cmd = 'PON' + str(options.port) + '\r'
elif options.cmd == "off":
	set_cmd = 'POF' + str(options.port) + '\r'
elif options.cmd == "reboot":
	set_cmd = 'POR' + str(options.port) + '\r'
else:
	parser.print_help()
	exit()

print "connect " + options.server
print set_cmd
try:
	t = telnetlib.Telnet(options.server)	# connect
	t.read_until(SRV_CON_CHK, TOUT)	# check
	t.write('\r')			# set *\n*
	t.read_until(PASSWD_PT_CHK, TOUT)	# wait password 
	t.write(PASSWD)			# set passwd 
	t.read_until(OK_CHK, TOUT)		# check password check
	t.read_until(WBC_PT, TOUT) 		# wait prompt
	t.write(set_cmd) 		# set Power control
	t.write('q\r') 			# exit

except EOFError:
	print 'connection closed'
